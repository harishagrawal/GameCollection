# Test generated by RoostGPT for test vaiva-trial using AI Type Open AI and AI Model gpt-4

import unittest
from jumbled_word_game import jumble_it

class TestJumbledWordGame(unittest.TestCase):

    def test_Jumble_it_7e41ef9762(self):
        # Test case 1: Check if the length of the jumbled word is same as the input word
        word = 'python'
        jumbled_word = jumble_it(word)
        self.assertEqual(len(word), len(jumbled_word), "Length of jumbled word is not same as input word")

        # Test case 2: Check if all characters of input word exist in jumbled word
        for char in word:
            self.assertIn(char, jumbled_word, f"Character {char} not found in jumbled word")

        # Test case 3: Check if jumbled word is not the same as the input word
        # This test case may fail sometimes as the jumbled word can be same as input word
        self.assertNotEqual(word, jumbled_word, "Jumbled word is same as input word")

        # Test case 4: Check if the function handles empty string correctly
        word = ''
        jumbled_word = jumble_it(word)
        self.assertEqual(word, jumbled_word, "Jumbled word is not same as input word for empty string")

if __name__ == '__main__':
    unittest.main()
