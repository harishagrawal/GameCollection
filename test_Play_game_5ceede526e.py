# Test generated by RoostGPT for test vaiva-trial using AI Type Open AI and AI Model gpt-4

import unittest
from unittest.mock import patch, MagicMock
from jumbled_word_game import play_game

class TestPlayGame(unittest.TestCase):
    @patch('jumbled_word_game.continue_playing')
    @patch('jumbled_word_game.choose_a_word')
    @patch('jumbled_word_game.jumble_it')
    @patch('jumbled_word_game.play_turn')
    def test_Play_game_5ceede526e(self, mock_play_turn, mock_jumble_it, mock_choose_a_word, mock_continue_playing):

        # Test case 1: Game continues for 2 turns
        mock_continue_playing.side_effect = [True, True, False]
        mock_choose_a_word.return_value = "word"
        mock_jumble_it.return_value = "drow"
        play_game()
        self.assertEqual(mock_play_turn.call_count, 2)

        # Test case 2: Game continues for 0 turns
        mock_play_turn.reset_mock()
        mock_continue_playing.side_effect = [False]
        play_game()
        self.assertEqual(mock_play_turn.call_count, 0)

        # Test case 3: Game continues for 5 turns
        mock_play_turn.reset_mock()
        mock_continue_playing.side_effect = [True, True, True, True, True, False]
        play_game()
        self.assertEqual(mock_play_turn.call_count, 5)

if __name__ == '__main__':
    unittest.main()
