# Test generated by RoostGPT for test vaiva-trial using AI Type Open AI and AI Model gpt-4

import unittest
from jumbled_word_game import play_turn, players, score, ask

class TestPlayTurn(unittest.TestCase):

    def test_Play_turn_da5fd74dfd(self):

        # Test Case 1: Someone gets the picked word right
        players = ["player1", "player2", "player3"]
        score = {"player1": 0, "player2": 0, "player3": 0}
        picked_word = "python"

        # Mock the ask function to return True for player2
        ask = lambda player, turn, word: player == "player2"

        play_turn(1, picked_word)
        self.assertEqual(score["player2"], 1, "The score of player2 should be 1")

        # Test Case 2: No one gets the picked word right
        players = ["player1", "player2", "player3"]
        score = {"player1": 0, "player2": 0, "player3": 0}
        picked_word = "python"

        # Mock the ask function to return False for all players
        ask = lambda player, turn, word: False

        play_turn(1, picked_word)
        self.assertEqual(sum(score.values()), 0, "The total score should be 0")

        # Test Case 3: Test with empty players list
        players = []
        score = {}
        picked_word = "python"
        # Mock the ask function
        ask = lambda player, turn, word: False

        play_turn(1, picked_word)
        self.assertEqual(sum(score.values()), 0, "The total score should be 0")
        
if __name__ == '__main__':
    unittest.main()
